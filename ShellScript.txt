Script file architechture: 
Hardware ==> kernel ==> shell ==> commands 

echo $SHELL ==> for which shell  u r using now 

before executing the file we have to change it as a executable file for that 
     chmod +x myscript.sh // now here the file permission will be changed and also if the user is a root user it wont ask the 
     permission for changing the permission if it is a normal user it will defenetly ask the permission 

#!bin/bash // this is hasbang/shebang the first line for all scripts it indicates that this script is a bash script 

usually in scripting  # indicates that it is a command line but in scripting first line is not a command 

Variables:
     myname= "Sanjive "
     echo $myname  // output : Sanjive 
// These type of variable only that terminal session. if we close the terminal it will gone     
so for that we can create script and then we can run again and again when ever we want 

nano variableDemo.sh
// chmod +x variableDemo.sh // for changing the permission to executable file 
#!bin/bash
myname="Sanjive"
age= "40" 
echo "My name is $myname" // if we use single quatos's it won't work just it will print My name is myname 
echo 'I'm  $age years old' // showing error if we want ' this we can use like \' this .. 
redirection:
      now=$(date)
      // here first check the utilites then it will store in the now variable... 
genrally enviranmental variables are stored in capital letters 
env - is a command for listing the system variables 

Basic Math functions:
normal math function for evaluation ==> expr 40 + 30 
// but * symbol won't work normally because it is a wilde card  ==> so \*  now it's work 
let's create the variable mynum=100   
  expr $mynum + 50 ==> 150 

If statements:
     if [ $mynum -eq 200 ]
     then
        echo "true"
     else
        echo "no that's not true"
     fi 
// if [ ! 200 -eq 300 ] ==> true ==> because not operator is here 
 we can use ne (not equal ) instead of this  // eq - equal ne - not equal // gt - greater than 

Checking files using if: 
      if [ -f ~/myfile ]  // here we have mention the path clearly 
      then
         echo "file exists"
     fi 
for directories we use -d 
// htop is a command that will help to see the system process related informations 
// for installing utilites by using script 
   sudo apt update && sudo apt install -y $command 
   

